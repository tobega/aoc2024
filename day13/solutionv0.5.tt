claws is [
[[94"x", 34"y"]
,[22"x", 67"y"]
,[8400"x", 5400"y"]]
,
[[26"x", 66"y"]
,[67"x", 21"y"]
,[12748"x", 12176"y"]]
,
[[17"x", 86"y"]
,[84"x", 37"y"]
,[7870"x", 6450"y"]]
,
[[69"x", 23"y"]
,[27"x", 71"y"]
,[18641"x", 10279"y"]]
];

cost-to-win templates
  -- columns are x and y equations, rows are a-coefficient, b-coefficient and result
  @ set $;
  -- make a-coeff equal in both
  @ set $@(.. as p; .. as eq; -> templates
     when <|?($eq matches <|=1>)> do ($ * $@cost-to-win(1; 2))"x" !
     when <|?($eq matches <|=2>)> do ($ * $@cost-to-win(1; 1))"y" !
  end);
  -- zero out a-coeff for x:s
  @([1,2,3]; 1) set  $@(1..3; 1) -> $(.. as p; -> ($ - $@cost-to-win($p;2))"x")...;
  b is ($@(3; 1) ~/ $@(2; 1))"1";
  a is (($@(3; 2) - $@(2; 2) * $b) ~/ $@(1; 2))"1";
  $ -> # !
  -- sanity check if integer division worked out
  when <|?($a * $(1; 1) + $b * $(2; 1) matches <|=$(3;1)>)
    ?($a * $(1; 2) + $b * $(2; 2) matches <|=$(3;2)>)> do $a * 3"1" + $b !
end cost-to-win

sum templates
  @ set $(1);
  $(2..)... -> @ set $@ + $;
  $@ !
end sum

[$claws... -> cost-to-win] -> sum !

[$claws... -> templates
  @ set $;
  @(3;1) set $@(3;1) + 10000000000000"x";
  @(3;2) set $@(3;2) + 10000000000000"y";
  $@ !
end -> cost-to-win] -> sum !
